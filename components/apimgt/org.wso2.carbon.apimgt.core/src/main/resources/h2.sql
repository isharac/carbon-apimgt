CREATE TABLE `AM_API` (
  `API_ID` INTEGER AUTO_INCREMENT,
  `PROVIDER` VARCHAR(255),
  `NAME` VARCHAR(255),
  `CONTEXT` VARCHAR(255),
  `VERSION` VARCHAR(30),
  `IS_DEFAULT_VERSION` BOOLEAN,
  `DESCRIPTION` VARCHAR(1024),
  `VISIBILITY` VARCHAR(30),
  `IS_RESPONSE_CACHED` BOOLEAN,
  `CACHE_TIMEOUT` INTEGER,
  `UUID` VARCHAR(255),
  `TECHNICAL_OWNER` VARCHAR(255),
  `TECHNICAL_EMAIL` VARCHAR(255),
  `BUSINESS_OWNER` VARCHAR(255),
  `BUSINESS_EMAIL` VARCHAR(255),
  `CREATED_BY` VARCHAR(100),
  `CREATED_TIME` TIMESTAMP,
  `LAST_UPDATED_TIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`API_ID`),
  UNIQUE (`PROVIDER`,`NAME`,`VERSION`)
);


CREATE TABLE `AM_API_IMAGE_MAPPING` (
  `API_ID` INTEGER,
  `IMAGE_ID` VARCHAR(255),
  PRIMARY KEY (`API_ID`, `IMAGE_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_IMAGES` (
  `IMAGE_ID` VARCHAR(255),
  `MIME_TYPE` VARCHAR(30),
  `IMAGE` BLOB,
  PRIMARY KEY (`IMAGE_ID`)
);






CREATE TABLE `AM_HISTORY_AUDIT` (
  `ENTRY_ID` INTEGER AUTO_INCREMENT,
  `TABLE_NAME` VARCHAR(255),
  `ENTITY_ID` INTEGER,
  `ACTION` VARCHAR(30),
  `ACTION_BY` VARCHAR(255),
  `ACTION_TIME` TIMESTAMP,
  PRIMARY KEY (`ENTRY_ID`)
);


CREATE TABLE `AM_API_VISIBILE_ROLES` (
  `API_ID` INTEGER,
  `ROLE` VARCHAR(255),
  PRIMARY KEY (`API_ID`, `ROLE`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_SWAGGER` (
  `API_ID` INTEGER,
  `SWAGGER_FILE` BLOB,
  PRIMARY KEY (`API_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_WSDL` (
  `API_ID` INTEGER,
  `WSDL_FILE` BLOB,
  PRIMARY KEY (`API_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_LIFECYCLE_MAPPING` (
  `API_ID` INTEGER,
  `LIFECYCLE_INSTANCE_ID` VARCHAR(255),
  PRIMARY KEY (`API_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);




CREATE TABLE `AM_API_TAG_MAPPING` (
  `API_ID` INTEGER,
  `TAG_ID` INTEGER,
  PRIMARY KEY (`API_ID`, `TAG_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_TAGS` (
  `TAG_ID` INTEGER AUTO_INCREMENT,
  `TAG_NAME` VARCHAR(255),
  PRIMARY KEY (`TAG_ID`)
);


CREATE TABLE `AM_API_POLICY_MAPPING` (
  `API_ID` INTEGER,
  `POLICY_ID` INTEGER,
  PRIMARY KEY (`API_ID`, `POLICY_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_SUBSCRIPTION_POLICY_MAPPING` (
  `API_ID` INTEGER,
  `POLICY_ID` INTEGER,
  PRIMARY KEY (`API_ID`, `POLICY_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_ENDPOINTS` (
  `API_ID` INTEGER,
  `ENVIRONMENT_CATEGORY` VARCHAR(30),
  `ENDPOINT_TYPE` VARCHAR(30),
  `IS_ENDPOINT_SECURED` BOOLEAN,
  `TPS` INTEGER,
  `AUTH_DIGEST` VARCHAR(30),
  `USERNAME` VARCHAR(255),
  `PASSWORD` VARCHAR(255),
  PRIMARY KEY (`API_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_SCOPES` (
  `API_ID` INTEGER,
  `SCOPE_ID` INTEGER,
  PRIMARY KEY (`API_ID`, `SCOPE_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_URL_MAPPING` (
  `API_ID` INTEGER,
  `HTTP_METHOD` VARCHAR(30),
  `URL_PATTERN` VARCHAR(255),
  `AUTH_SCHEME` VARCHAR(30),
  `API_POLICY_ID` INTEGER,
  PRIMARY KEY (`API_ID`, `HTTP_METHOD`, `URL_PATTERN`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_CORS_CONFIGURATION` (
  `API_ID` INTEGER,
  `ALLOW_ORIGINS` VARCHAR(512),
  `ALLOW_CREDENTIALS` BOOLEAN,
  `ALLOW_HEADERS` VARCHAR(512),
  `ALLOW_METHODS` VARCHAR(255),
  PRIMARY KEY (`API_ID`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE `AM_API_ENVIRONMENTS` (
  `API_ID` INTEGER,
  `ENV_NAME` VARCHAR(255),
  `HTTP_URL` VARCHAR(255),
  `HTTPS_URL` VARCHAR(255),
  `APPEND_CONTEXT` BOOLEAN,
  PRIMARY KEY (`API_ID`, `ENV_NAME`),
  FOREIGN KEY (`API_ID`) REFERENCES `AM_API`(`API_ID`) ON UPDATE CASCADE ON DELETE CASCADE
);
